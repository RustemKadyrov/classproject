# Generated by Django 3.0 on 2022-03-07 14:52

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Account',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('datetime_deleted', models.DateTimeField(blank=True, null=True, verbose_name='Время удаления')),
                ('full_name', models.CharField(max_length=20)),
                ('description', models.TextField()),
            ],
            options={
                'verbose_name': 'Аккаунт',
                'verbose_name_plural': 'Аккаунты',
                'ordering': ('full_name',),
            },
        ),
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('datetime_deleted', models.DateTimeField(blank=True, null=True, verbose_name='Время удаления')),
                ('name', models.CharField(max_length=10)),
            ],
            options={
                'verbose_name': 'Группа',
                'verbose_name_plural': 'Группы',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('datetime_deleted', models.DateTimeField(blank=True, null=True, verbose_name='Время удаления')),
                ('age', models.IntegerField(verbose_name='Возраст студента')),
                ('gpa', models.FloatField(verbose_name='Средний бал')),
                ('account', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='app1.Account')),
                ('group', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='app1.Group')),
            ],
            options={
                'verbose_name': 'Студент',
                'verbose_name_plural': 'Стундеты',
                'ordering': ('account', 'age', 'group', 'gpa'),
            },
        ),
        migrations.CreateModel(
            name='Professor',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('datetime_created', models.DateTimeField(auto_now_add=True, verbose_name='Время создания')),
                ('datetime_updated', models.DateTimeField(auto_now=True, verbose_name='Время обновления')),
                ('datetime_deleted', models.DateTimeField(blank=True, null=True, verbose_name='Время удаления')),
                ('full_name', models.CharField(max_length=20, verbose_name='Полное имя')),
                ('topic', models.CharField(choices=[('java', 'Java'), ('python', 'Python'), ('typescript', 'TypeScrips'), ('ruby', 'Ruby'), ('golang', 'Golanfg'), ('sql', 'SQL'), ('swift', 'Swift'), ('php', 'PHP'), ('delphi', 'Delphi'), ('perl', 'Perl')], default='java', max_length=20, verbose_name='Предмет')),
                ('students', models.ManyToManyField(to='app1.Student')),
            ],
            options={
                'verbose_name': 'Преподователь',
                'verbose_name_plural': 'Преподователи',
                'ordering': ('full_name', 'topic'),
            },
        ),
    ]
